openapi: 3.0.3
info:
    title: Laravel
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/users:
        post:
            summary: ユーザの登録
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: UUID
                                    name: TestName
                                    email: test@example.com
                                properties:
                                    id: { type: string, example: UUID }
                                    name: { type: string, example: TestName }
                                    email: { type: string, example: test@example.com }
                422:
                    description: '422, Validation error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    errors: { name: ['The name field is required.', 'The name may not be greater than 255 characters.'], email: ['The email field is required.', 'The email must be a valid email address.', 'The name may not be greater than 255 characters.'], password: ['The name field is required.', 'The password must be at least 8 characters.', 'The password confirmation does not match.'] }
                                properties:
                                    errors: { type: object, example: { name: ['The name field is required.', 'The name may not be greater than 255 characters.'], email: ['The email field is required.', 'The email must be a valid email address.', 'The name may not be greater than 255 characters.'], password: ['The name field is required.', 'The password must be at least 8 characters.', 'The password confirmation does not match.'] } }
                409:
                    description: '409, Validation error'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    errors: { name: ['The name field is required.', 'The name may not be greater than 255 characters.'], email: ['The email field is required.', 'The email must be a valid email address.', 'The name may not be greater than 255 characters.'], password: ['The name field is required.', 'The password must be at least 8 characters.', 'The password confirmation does not match.'] }
                                properties:
                                    errors: { type: object, example: { name: ['The name field is required.', 'The name may not be greater than 255 characters.'], email: ['The email field is required.', 'The email must be a valid email address.', 'The name may not be greater than 255 characters.'], password: ['The name field is required.', 'The password must be at least 8 characters.', 'The password confirmation does not match.'] } }
            tags:
                - User
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: required
                                    description: 名前
                                    example: testName
                                email:
                                    type: required
                                    description: メールアドレス
                                    example: example@example.com
                                password:
                                    type: required
                                    description: パスワード
                                    example: Passw0rd!
                                password_confirmation:
                                    type: required
                                    description: 確認用パスワード
                                    example: Passw0rd!
            security: []
        get:
            summary: '　ユーザ検索'
            description: ''
            parameters:
                -
                    in: query
                    name: id
                    description: ユーザID
                    example: 91849582-bdf9-11eb-8529-0242ac130003
                    required: false
                    schema:
                        type: string
                        description: ユーザID
                        example: 91849582-bdf9-11eb-8529-0242ac130003
                -
                    in: query
                    name: name
                    description: ユーザ名
                    example: TestName
                    required: false
                    schema:
                        type: string
                        description: ユーザ名
                        example: TestName
                -
                    in: query
                    name: email
                    description: メールアドレス
                    example: test@example.com
                    required: false
                    schema:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: UUID
                                    name: TestName
                                    email: test@example.com
                                properties:
                                    id: { type: string, example: UUID }
                                    name: { type: string, example: TestName }
                                    email: { type: string, example: test@example.com }
            tags:
                - User
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                    description: ''
                                    example: tempore
                                name:
                                    type: string
                                    description: ''
                                    example: autem
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: glover.talia@example.org
            security: []
        parameters:
            -
                in: path
                name: users
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: nemo
